{"openapi":"3.1.0","externalDocs":{"description":"Find more information on the API in the github documentation.","url":"https://bane-nor.github.io/event-issuer/"},"info":{"title":"Event Issuer Alpha","version":"0.4.0","description":"### Introduction\n\nThe goal of an Event Issuer is to provide an infrastructure to abstract event delivery via a secured RESTful API to\nexternal users and systems such as SaaS. This allows external users to maintain service boundaries, and not directly depend\non any specific message broker technology. The event issuer will have the possibility for both consuming events from\nBane NOR and produce new events.\n\n### API versions\n\nThis API uses sematic versioning, and version names follow the v{major} format. You can find the versions currently available\nby using the version selector at the top of this page. To use a specific API version, you can pass the version as part of the request URI.\n\n#### Beta version\n\nThe beta versions provide a preview of what the stable version will look like in the future. Beta versions contain functionality that is reasonably mature, and highly likely to become a part of the stable API.\n\nBeta versions are indicated by a beta suffix after the version. For example, the beta version header for the v1 version is then v1beta.\n\n#### Alpha version\n\nAlpha versions contain functionality that is new and experimental, and not guaranteed to ever become a part of the stable API. This functionality presents no guarantee of service, so its use is subject to caution.\n\nAlpha versions are indicated by an alpha suffix after the version name. For example, the alpha version header for the v1 version is then v1alpha.\n\n---\n"},"paths":{"/{tenantId}/subscriptions":{"get":{"summary":"List all subscriptions you have created","operationId":"getAllSubscriptions","tags":["Subscriptions"],"parameters":[{"$ref":"#/components/parameters/tenantId"}],"responses":{"200":{"description":"Ok","content":{"application/json":{"schema":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/Subscription"}]}}}}},"400":{"$ref":"#/components/responses/400-bad-request"},"401":{"$ref":"#/components/responses/401-unauthorized"},"403":{"$ref":"#/components/responses/403-forbidden"},"404":{"$ref":"#/components/responses/404-not-found"},"500":{"$ref":"#/components/responses/500-internal-server-error"}}},"post":{"summary":"Create a new subscription","operationId":"createSubscription","tags":["Subscriptions"],"parameters":[{"$ref":"#/components/parameters/tenantId"}],"requestBody":{"description":"A Json Object containing subscription info","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSubscription"}}}},"responses":{"200":{"description":"Ok","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"$ref":"#/components/responses/400-bad-request"},"401":{"$ref":"#/components/responses/401-unauthorized"},"409":{"$ref":"#/components/responses/409-conflict"},"500":{"$ref":"#/components/responses/500-internal-server-error"}}}},"/{tenantId}/subscriptions/{subscriptionId}":{"get":{"summary":"Get information on specific subscription with more details","operationId":"getSpecificSubscription","tags":["Subscriptions"],"parameters":[{"$ref":"#/components/parameters/tenantId"},{"$ref":"#/components/parameters/subscriptionId"}],"responses":{"200":{"description":"Ok","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"$ref":"#/components/responses/400-bad-request"},"401":{"$ref":"#/components/responses/401-unauthorized"},"403":{"$ref":"#/components/responses/403-forbidden"},"404":{"$ref":"#/components/responses/404-not-found"},"500":{"$ref":"#/components/responses/500-internal-server-error"}}},"put":{"summary":"Update a specific subscription with new information","operationId":"updateSpecificSubscription","tags":["Subscriptions"],"parameters":[{"$ref":"#/components/parameters/tenantId"},{"$ref":"#/components/parameters/subscriptionId"}],"requestBody":{"description":"A Json Object containing subscription information.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSubscription"}}}},"responses":{"200":{"description":"Ok","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"$ref":"#/components/responses/400-bad-request"},"401":{"$ref":"#/components/responses/401-unauthorized"},"403":{"$ref":"#/components/responses/403-forbidden"},"404":{"$ref":"#/components/responses/404-not-found"},"500":{"$ref":"#/components/responses/500-internal-server-error"}}},"delete":{"summary":"Delete an existing subscription","operationId":"deleteSpecificSubscription","tags":["Subscriptions"],"parameters":[{"$ref":"#/components/parameters/tenantId"},{"$ref":"#/components/parameters/subscriptionId"}],"responses":{"200":{"description":"Ok"},"400":{"$ref":"#/components/responses/400-bad-request"},"401":{"$ref":"#/components/responses/401-unauthorized"},"403":{"$ref":"#/components/responses/403-forbidden"},"404":{"$ref":"#/components/responses/404-not-found"},"422":{"$ref":"#/components/responses/422-unprocessable-content"},"500":{"$ref":"#/components/responses/500-internal-server-error"}}}},"/{tenantId}/produce":{"post":{"summary":"Produce events to the event backbone","operationId":"produce","tags":["Produce"],"parameters":[{"$ref":"#/components/parameters/tenantId"}],"requestBody":{"description":"A CloudEvent based JSON Object containing metadata and the payload","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloudEvents"}}}},"responses":{"202":{"description":"Accepted"},"400":{"$ref":"#/components/responses/400-bad-request"},"401":{"$ref":"#/components/responses/401-unauthorized"},"500":{"$ref":"#/components/responses/500-internal-server-error"}}}},"/{tenantId}/produce/batch":{"post":{"summary":"Produce a batch of events to the event backbone","operationId":"produceBatch","tags":["Produce"],"parameters":[{"$ref":"#/components/parameters/tenantId"}],"requestBody":{"description":"A list of CloudEvents based JSON Objects containing metadata and the payload","required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloudEventsBatch"}}}},"responses":{"202":{"description":"Accepted"},"400":{"$ref":"#/components/responses/400-bad-request"},"401":{"$ref":"#/components/responses/401-unauthorized"},"500":{"$ref":"#/components/responses/500-internal-server-error"}}}},"/health":{"get":{"summary":"Retrieves the health of event issuer","operationId":"getStatusHealth","tags":["Health"],"responses":{"200":{"description":"Ok","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"400":{"$ref":"#/components/responses/400-bad-request"},"500":{"$ref":"#/components/responses/500-internal-server-error"}}}}},"components":{"securitySchemes":{"apiKey":{"type":"apiKey","in":"header","name":"Ocp-Apim-Subscription-Key","description":"All requests must include the 'Ocp-Apim-Subscription-Key' header."}},"parameters":{"tenantId":{"name":"tenantId","in":"path","required":true,"description":"Tenant ID representing the tenant this particular request belongs to.\n","schema":{"type":"string"}},"subscriptionId":{"name":"subscriptionId","in":"path","required":true,"description":"The identification of the subscription to get information from.","schema":{"type":"string"}}},"schemas":{"Subscription":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the object."},"applicationId":{"type":"string","description":"A unique identifier to help identify the receiving application"},"event":{"type":"string","description":"The subscribed event."},"url":{"type":"string","description":"The URL of the subscription."},"createdAt":{"type":"string","format":"date-time","description":"Time at which the object was created."},"updatedAt":{"type":"string","format":"date-time","description":"Time at which the object was updated."}}},"ProblemDetail":{"type":"object","additionalProperties":true,"minProperties":1,"description":"The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].","properties":{"type":{"type":"string","description":"A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".","format":"uri"},"title":{"type":"string","description":"A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."},"status":{"type":"integer","description":"The HTTP status code.","minimum":400,"maximum":599},"detail":{"type":"string","description":"A human-readable explanation specific to this occurrence of the problem."},"instance":{"type":"string","description":"A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."}}},"ApiKey":{"type":"object","properties":{"header":{"type":"string","description":"The name of the header to set on the request towards the webhook endpoint","example":"Ocp-Apim-Subscription-Key"},"key":{"type":"string","description":"The API key that will be set on to the given header","example":"jnfdi923r8fnaszy12orf98032nrcn7u982"}}},"BasicAuth":{"type":"object","properties":{"username":{"type":"string","description":"The username used to access the webhook endpoint","example":"systemx"},"password":{"type":"string","description":"The password used for the given username","example":"use-a-secure-password"}}},"CreateSubscription":{"type":"object","required":["applicationId","event","url"],"properties":{"applicationId":{"type":"string","description":"A unique identifier to help identify the receiving application","example":"application1"},"event":{"type":"string","description":"The subscribed event.","example":"cloud.operational.train-arrived-at-station.v1"},"url":{"type":"string","pattern":"https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()!@:%_\\+.~#?&\\/\\/=]*)","description":"The URL that will receive data from the selected event.","example":"https://test.no/test"},"apiKey":{"$ref":"#/components/schemas/ApiKey"},"authentication":{"oneOf":[{"$ref":"#/components/schemas/BasicAuth"}]}}},"UpdateSubscription":{"type":"object","properties":{"url":{"type":"string","pattern":"https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()!@:%_\\+.~#?&\\/\\/=]*)","minimum":1,"description":"The URL of the subscription.","example":"https://test.no/test"}}},"CloudEvents":{"required":["id","source","specversion","type"],"type":"object","properties":{"specversion":{"type":"string","description":"CloudEvents 'specversion' attribute. The version of the CloudEvents\r\nspecification which the event uses. This enables the interpretation of the context."},"id":{"type":"string","description":" Identifies the event. Producers MUST ensure that source + id is unique for each distinct event. If a duplicate event is re-sent (e.g. due to a network error) it MAY have the same id. Consumers MAY assume that Events with identical source and id are duplicates.\r\nExamples:\r\n An event counter maintained by the producer\r\n A UUID\r\nConstraints:\r\n REQUIRED\r\n MUST be a non-empty string\r\n MUST be unique within the scope of the producer"},"source":{"type":"string","description":"Identifies the context in which an event happened. Often this will include information such as the type of the event source, the organization publishing the event or the process that produced the event. The exact syntax and semantics behind the data encoded in the URI is defined by the event producer.\r\n            \r\nProducers MUST ensure that source + id is unique for each distinct event.\r\n            \r\nAn application MAY assign a unique source to each distinct producer, which makes it easy to produce unique IDs since no other producer will have the same source. The application MAY use UUIDs, URNs, DNS authorities or an application-specific scheme to create unique source identifiers.\r\n            \r\nA source MAY include more than one producer. In that case the producers MUST collaborate to ensure that source + id is unique for each distinct event.\r\n            \r\nConstraints:\r\n            \r\n    REQUIRED\r\n    MUST be a non-empty URI-reference\r\n    An absolute URI is RECOMMENDED\r\n            \r\nExamples\r\n            \r\n    Internet-wide unique URI with a DNS authority.\r\n        https://github.com/cloudevents\r\n        mailto:cncf-wg-serverless @lists.cncf.io\r\n    Universally-unique URN with a UUID:\r\n        urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66\r\n    Application-specific identifiers\r\n        /cloudevents/spec/pull/123\r\n        /sensors/tn-1234567/alerts\r\n        1-555-123-4567","format":"uri"},"subject":{"type":"string","description":"CloudEvents 'subject' attribute. This describes the subject of the event in the context\r\nof the event producer (identified by source). In publish-subscribe scenarios, a subscriber\r\nwill typically subscribe to events emitted by a source, but the source identifier alone\r\nmight not be sufficient as a qualifier for any specific event if the source context has\r\ninternal sub-structure."},"type":{"type":"string","description":"CloudEvents 'type' attribute. Type of occurrence which has happened.\r\nOften this attribute is used for routing, observability, policy enforcement, etc."},"time":{"type":"string","description":"CloudEvents 'time' attribute. Timestamp of when the event happened.","format":"date-time"},"datacontenttype":{"type":"string","description":"Type: String per RFC 2046\r\nDescription: Content type of data value.This attribute enables data to carry any type of content, whereby format and encoding might differ from that of the chosen event format.For example, an event rendered using the JSON envelope format might carry an XML payload in data, and the consumer is informed by this attribute being set to \"application/xml\". The rules for how data content is rendered for different datacontenttype values are defined in the event format specifications; for example, the JSON event format defines the relationship in section 3.1.\r\n            \r\nFor some binary mode protocol bindings, this field is directly mapped to the respective protocol's content-type metadata property. Normative rules for the binary mode and the content-type metadata mapping can be found in the respective protocol\r\n            \r\nIn some event formats the datacontenttype attribute MAY be omitted.For example, if a JSON format event has no datacontenttype attribute, then it is implied that the data is a JSON value conforming to the \"application/json\" media type. In other words: a JSON-format event with no datacontenttype is exactly equivalent to one with datacontenttype = \"application/json\".\r\n     \r\n            \r\nWhen translating an event message with no datacontenttype attribute to a different format or protocol binding, the target datacontenttype SHOULD be set explicitly to the implied datacontenttype of the source.\r\n            \r\n            \r\nConstraints:\r\n            \r\n    OPTIONAL\r\n    If present, MUST adhere to the format specified in RFC 2046\r\n            \r\nFor Media Type examples see IANA Media Types"},"dataschema":{"type":"string","description":"Type: URI\r\nDescription: Identifies the schema that data adheres to.Incompatible changes to the schema SHOULD be reflected by a different URI.See Versioning of Attributes in the Primer for more information.\r\nConstraints:\r\n    OPTIONAL\r\n    If present, MUST be a non-empty URI","format":"uri"},"data":{"type":"object","additionalProperties":false,"description":"CloudEvent 'data' content.  The event payload. The payload depends on the type\r\nand the 'schemaurl'. It is encoded into a media format which is specified by the\r\n'contenttype' attribute (e.g. application/json)."}},"additionalProperties":false},"CloudEventsBatch":{"type":"array","items":{"$ref":"#/components/schemas/CloudEvents"}},"Health":{"type":"object","required":["status"],"properties":{"status":{"type":"string","example":"ok","enum":["ok","fail","warn"]}}}},"responses":{"400-bad-request":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetail"},"example":{"type":"http://example.com","title":"string","status":400,"detail":"string","instance":"string"}}}},"401-unauthorized":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetail"},"example":{"type":"http://example.com","title":"string","status":401,"detail":"string","instance":"string"}}}},"403-forbidden":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetail"},"example":{"type":"http://example.com","title":"string","status":403,"detail":"string","instance":"string"}}}},"404-not-found":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetail"},"example":{"type":"http://example.com","title":"string","status":404,"detail":"string","instance":"string"}}}},"500-internal-server-error":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetail"},"example":{"type":"http://example.com","title":"string","status":500,"detail":"string","instance":"string"}}}},"409-conflict":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetail"},"example":{"type":"http://example.com","title":"string","status":409,"detail":"string","instance":"string"}}}},"422-unprocessable-content":{"description":"Unprocessable Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemDetail"},"example":{"type":"http://example.com","title":"string","status":422,"detail":"string","instance":"string"}}}}}},"security":[{"apiKey":[]}],"servers":[{"url":"https://dev.api.apps.banenor.no/event-issuer","description":"Internal development instance"},{"url":"https://test.api.apps.banenor.no/event-issuer","description":"Internal test instance"}]}