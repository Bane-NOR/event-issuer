{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#prerequisite","title":"Prerequisite","text":"<ul> <li>What is event-driven architecture, and what are the benefits?</li> </ul>"},{"location":"#what-is-event-issuer","title":"What is Event Issuer?","text":"<p>Event issuer is a service designed to facilitate the sharing of events from the Bane NOR's Event Backbone to external systems.</p>"},{"location":"#why-do-we-need-an-event-issuer","title":"Why do we need an Event Issuer?","text":""},{"location":"#security","title":"Security","text":"<p>Due to security concerns, Bane NOR cannot directly expose the Event Backbone to the internet.  Therefore, the Event Issuer serves as a intermediary, ensuring a secure means of delivering event data to external systems.</p>"},{"location":"#subscribing-to-event-type","title":"Subscribing to Event type","text":"<pre><code>flowchart BT\n    subgraph Maskinporten\n        id(Identity Provider)\n    end\n\n    subgraph Internet\n        external(External System)--1. Authenticate--&gt;id\n        id-. 2. Receive Token .-&gt;external\n    end\n\n    subgraph Bane NOR network\n        external-- 3. Request Event subscription--&gt;apim(API Manager)\n        apim-- 4. Verify Token--&gt;id\n        id-. 5. OK .-apim\n        apim-- 6. Forward request --&gt;eventIssuer([Event Issuer])\n    end</code></pre>"},{"location":"#consuming-event","title":"Consuming event","text":"<pre><code>flowchart LR\n    subgraph Bane NOR network\n        Service--&gt;eventBackbone(Event Backbone)\n        eventBackbone--&gt;eventIssuer([Event Issuer])\n    end\n    subgraph Internet\n        eventIssuer--Event Data--&gt;external(External System)\n    end</code></pre>"},{"location":"#standardization","title":"Standardization","text":"<p>By having a standardized process for external parties to consume Bane NOR events it lowers the threshold for external parties to start consuming events from Bane NOR, regardless if it is a single developer or a big organization.</p> <p>Event Issuer is also built using the HTTP protocol, which is a standardized way of exchanging data. Making it easy to integrate and applicable for most use cases.</p>"},{"location":"#benefits","title":"Benefits","text":"<ul> <li>Abstract event delivery via a  RESTful API</li> <li>Enable the development of event-driven applications and asynchronous microservices.</li> <li>Provides efficient, low latency event delivery.</li> </ul>"},{"location":"#example-use-cases","title":"Example use cases","text":"<ul> <li>TogApp</li> </ul>"},{"location":"#how-does-event-issuer-work","title":"How does Event Issuer work?","text":"<p>A good way to think of <code>events</code> is that they are like messages in a stream processing or queuing system, but have a defined structure that can be understood and validated. </p> <p>A resource called a <code>stream</code> is available for event types. The stream can be read from by one or more consumers.</p> <p>Consumers can read events and track their position in the stream using a cursor. Consumers can also use a cursor to read from a stream at a particular position. Multiple consumers can read from the same stream, allowing different applications to read the stream simultaneously.</p> <pre><code>sequenceDiagram\n    participant External System\n    participant Event Issuer\n    participant Event Backbone\n\n    External System-&gt;&gt;Event Issuer: Request Event Stream\n    Event Issuer-&gt;&gt;Event Backbone: Read events from\n    Event Backbone--&gt;&gt;Event Issuer: Event Data\n    Event Issuer--&gt;&gt;External System: Event Data</code></pre> <p>In short, Event Issuer exposes event streams as Webhooks</p> <p>Read more about Webhooks</p> <p>Webhooks.fyi - Introduction</p>"},{"location":"#get-started","title":"Get Started","text":""},{"location":"#roadmap","title":"Roadmap","text":""},{"location":"#feature-maskinporten-integrasjon","title":"Feature: Maskinporten integrasjon","text":"<p>In collaboration with DigDir, Bane NOR is working to develop a simplified application process for accessing Bane NOR's services through Maskinporten.</p> <p>In the future, it will be possible to use this access to issue a token from Maskinporten, and use it to authenticate in Event Issuer and obtain authorization for specific event types.</p>"},{"location":"use-case-tog-app/","title":"Use case: TogApp","text":"<p>Note</p> <p>This is a hypothetical use case whose purpose is to highlight benefits of using Event Issuer</p>"},{"location":"use-case-tog-app/#overview","title":"Overview","text":"<p>TogApp AS, is developing an iOS application that provides users with real-time train position updates on a map. To achieve this, TogApp leverages event-driven architecture, utilizing events from Bane NOR.</p> <p></p>"},{"location":"use-case-tog-app/#system-context","title":"System Context","text":""},{"location":"use-case-tog-app/#seamless-integration","title":"Seamless Integration","text":"<p>Thanks to its event-driven architecture, TogApp seamlessly integrates with Bane NOR, the provider of train position data. Bane NOR generates real-time train position events in a standardized JSON format, which acts as a contract between the two systems. TogApp can focus on its core functionality without needing to concern itself with the intricacies of Bane NOR's internal processes.</p> public.operational.event.train-position.json.v1 schema<pre><code>{\n  \"$id\": \"https://example.com/person.schema.json\",\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"title\": \"TrainPosition\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"timestamp\": {\n      \"type\": \"datetime\",\n      \"description\": \"Timestamp of event\"\n    },\n    \"trainId\": {\n        \"type\": \"number\",\n        \"description\": \"Train identifier\"\n    },\n    \"latitude\": {\n        \"type\": \"number\",\n        \"description\": \"Latitude of train position\"\n    },\n    \"longitude\": {\n        \"type\": \"number\",\n        \"description\": \"Longitude of train position\"\n    }\n  }\n}\n</code></pre>"},{"location":"use-case-tog-app/#real-time-updates","title":"Real-time updates","text":"<p>By subscribing to the event type public.operational.event.train-position.json.v1, TogApp receives real-time updates on train positions. This ensures that TogApp's users are always aware of the current locations of trains, enhancing the app's utility and user experience.</p> Timestamp Train ID Latitude Longitude 2023-10-24T09:12:15Z 1 9.96233 49.80404 2023-10-24T09:12:30Z 3 6.11499 50.76891 2023-10-24T09:12:45Z 1 6.80592 51.53548"},{"location":"use-case-tog-app/#data-enrichment","title":"Data enrichment","text":"<p>TogApp isn't limited to using the raw event data alone. It has the flexibility to enrich this data by aggregating it with information from other sources, such as train models and operators. This enables TogApp to provide even more valuable insights to its users, making the app an indispensable tool for train enthusiasts and commuters.</p>"},{"location":"use-case-tog-app/#conclusion","title":"Conclusion","text":"<p>TogApp's utilization of event-driven architecture leveraging events such as <code>public.operational.event.train-position.json.v1</code> from Bane NOR offers numerous benefits. It provides seamless integration with data providers, real-time updates, data enrichment opportunities, scalability, resilience, and easy access for external systems. This approach not only enhances the user experience but also positions TogApp as a versatile platform for sharing real-time train position information.</p>"},{"location":"technical-documentation/api-versioning/","title":"API Versioning","text":""},{"location":"technical-documentation/api-versioning/#api-versions","title":"API versions","text":""},{"location":"technical-documentation/api-versioning/#version-url","title":"Version URL","text":"<p>This API uses semver, and version names follows the <code>v{major}</code> format. You can find the versions currently available by using the version selector at the top of this page. Read more about semver here</p>"},{"location":"technical-documentation/api-versioning/#beta-versions","title":"Beta versions","text":"<p>The beta versions provide a preview of what the stable version will look like in the future. Beta versions contain functionality that is reasonably mature, and highly likely to become a part of the stable API.</p> <p>Beta versions are indicated by a <code>beta</code> suffix after the version.</p>"},{"location":"technical-documentation/api-versioning/#alpha-versions","title":"Alpha versions","text":"<p>Alpha versions contain functionality that is new and experimental, and not guaranteed to ever become a part of the stable API. This functionality presents no guarantee of service, so its use is subject to caution.</p> <p>Alpha versions are indicated by an <code>alpha</code> suffix after the version name.</p>"},{"location":"user-guides/","title":"Getting started","text":"<p>In this section you can find relevant information to get started with Event Issuer</p>"},{"location":"user-guides/#product-owners","title":"Product Owners","text":"Guides Get started with Event Issuer"},{"location":"user-guides/#developers","title":"Developers","text":"Guides Subscribe to Event Issuer API Consume events from Event Issuer"},{"location":"user-guides/consume-events-from-event-issuer/","title":"Consume events from Event Issuer","text":""},{"location":"user-guides/consume-events-from-event-issuer/#how-to-consume-events-from-event-issuer","title":"How to consume events from Event Issuer","text":"<p>Use the subscriptions endpoint to subscribe to an Event.</p> <p>POST https://api.banenor.no/event-issuer/v1alpha/subscriptions</p> <p>Example Payload</p> <pre><code>{\n    \"applicationId\": \"application1\",\n    \"event\": \"operational.event.train-arrived-at-station.v1\",\n    \"url\": \"https://test.no/test\"\n}\n</code></pre> Parameter Description applicationId Identificator of Application that subscribes to event event Which Event type to subscribe to url The endpoint to return events to <p>If subscription is created successfully, Event Issuer will start sending events to the url given in the subscription. The events are sent as <code>application/json</code> and contains the key and value of the Event.</p> <pre><code>{\n    \"key\": \"object\",\n    \"value\": \"object\"\n}\n</code></pre> <p>The deserialization and further consumption should be handled by the subscriber.</p>"},{"location":"user-guides/get-started-with-event-issuer/","title":"Get started with Event Issuer","text":""},{"location":"user-guides/get-started-with-event-issuer/#onboarding-process","title":"Onboarding process","text":"<p>Note</p> <p>Work in progress</p>"},{"location":"user-guides/subscribe-to-event-issuer/","title":"Subscribe to Event Issuer API","text":"<p>The Event Issuer API is available at Bane NOR's API Manager.</p>"},{"location":"user-guides/subscribe-to-event-issuer/#1-go-to-api-manager","title":"1. Go to API Manager","text":""},{"location":"user-guides/subscribe-to-event-issuer/#2-sign-in-to-api-manager","title":"2. Sign in to API Manager","text":""},{"location":"user-guides/subscribe-to-event-issuer/#3-select-business-partners-product","title":"3. Select Business Partners Product","text":""},{"location":"user-guides/subscribe-to-event-issuer/#4-subscribe-to-business-partners-product","title":"4. Subscribe to Business Partners Product","text":"<p>Store the subscription keys in a safe place as the keys are required to use APIs exposed through the API Manager.</p>"},{"location":"user-guides/subscribe-to-event-issuer/#5-go-to-event-issuer-api","title":"5. Go to Event Issuer API","text":""},{"location":"user-guides/subscribe-to-event-issuer/#6-connect-to-event-issuer-api","title":"6. Connect to Event Issuer API","text":"<p>Now that you have the subscription keys and access to the Event Issuer API, you can start subscribing to events exposed through the Event Issuer API.</p> <p>Subscription Key</p> <p>Remember to set Ocp-Apim-SubscriptionKey in the header when using the Event Issuer API.</p>"}]}